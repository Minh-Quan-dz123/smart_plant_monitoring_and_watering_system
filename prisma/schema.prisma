// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique // "ADMIN", "USER", ...
  users User[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
  plants    Plant[]
  gardens   Garden[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Plant {
  id          Int      @id @default(autoincrement())
  name        String   @unique // Tên cây
  description String? // Mô tả, công dụng, cách trồng
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById Int
  gardens     Garden[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Garden {
  id          Int          @id @default(autoincrement())
  name        String
  plant       Plant        @relation(fields: [plantId], references: [id])
  plantId     Int
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  sensors     Sensor[]
  irrigations Irrigation[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Sensor {
  id        Int      @id @default(autoincrement())
  type      String // ví dụ: temperature, humidity
  value     Float
  timestamp DateTime @default(now())
  garden    Garden   @relation(fields: [gardenId], references: [id])
  gardenId  Int
}

model Irrigation {
  id        Int      @id @default(autoincrement())
  status    Boolean  @default(false) // đang tưới hay không
  timestamp DateTime @default(now())
  garden    Garden   @relation(fields: [gardenId], references: [id])
  gardenId  Int
}
